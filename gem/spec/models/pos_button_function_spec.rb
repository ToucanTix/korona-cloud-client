=begin
#KORONA.cloud API v3

#Our api provides access to our cloud services

The version of the OpenAPI document: 2.19.20
Contact: support@combase.net
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for KoronaCloudClient::PosButtonFunction
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe KoronaCloudClient::PosButtonFunction do
  let(:instance) { KoronaCloudClient::PosButtonFunction.new }

  describe 'test an instance of PosButtonFunction' do
    it 'should create an instance of PosButtonFunction' do
      expect(instance).to be_instance_of(KoronaCloudClient::PosButtonFunction)
    end
  end
  describe 'test attribute "product"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "macro"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ADJUST_PAYMENT", "SELECT_ALL", "EXIT_APPLICATION", "APPLY_PAYMENT_TIP", "SHOW_PRODUCT_SEARCH", "TOGGLE_AUTO_RECEIPT_PRINT", "OPEN_RECEIPT_VIA_ORDER_NUMBER", "SHOW_RECEIPT_ARCHIVE", "COPY_TOTAL_TO_INPUT", "PRINT_TREAT_RECEIPT", "CANCEL_RECEIPT", "PARK_RECEIPT", "PRINT", "ENABLE_PRINT_PREVIEW", "DISABLE_PRINT_PREVIEW", "ENTER", "CLEAR_INPUT", "BACKSPACE", "MANUFACTURE", "BACKGROUND_IMAGE", "BALANCE", "BALANCE_POS", "OPEN_CASHDRAWER", "PRINT_POS_MONTH_REPORT", "PRINT_POS_REPORT", "PRINT_POS_WEEK_REPORT", "CASHIER_QUICK_CHANGE", "PRINT_CASHIER_REPORT", "CHANGE_CASHIER", "SHOW_KORONA_INFO", "COST_ACCOUNT", "CUSTOMER_GROUP", "DESELECT", "BIND_ITEMS", "ADD_FREE_INFO_TEXT", "REMOVE_INFO_TEXTS", "SPLIT_ITEMS", "TRANSFER_ITEMS", "ITEM_SEQUENCE", "ITEM_INFO_TEXT", "CHANGE_QUANTITY", "CHANGE_PRICE", "ITEM_DISCOUNT", "REOPEN_RECEIPT", "RETURN", "TOGGLE_QUICK_KEY_MODE", "SCROLL_UP", "SCROLL_DOWN", "SELECT", "VOID_ITEM", "VOID_RECEIPT", "FINISH_DAY", "KEY_0", "KEY_1", "KEY_2", "KEY_3", "KEY_4", "KEY_5", "KEY_6", "KEY_7", "KEY_8", "KEY_9", "KEY_COMMA", "KEY_PERIOD", "KEY_MULT", "KEY_MINUS", "SHOW_BUTTONLAYOUT", "TOTAL", "TOGGLE_SECTOR", "TOGGLE_SECTOR_DEFAULT", "TOGGLE_SECTOR_ALTERNATIV", "PAYMENT", "BIND_PAYMENTS", "RETRIEVE_MASTER_DATA", "SHOW_HANDHELD_MANAGER", "SHOW_TICKETCHECK", "SHOW_TABLEOVERVIEW", "SET_ORDER_NUMBER", "STOCK_RECEIPT", "INVENTORY_RECEIPT", "TIME_TRACKING", "SHOW_LABEL_PRINT_PAGE", "COPY_RECEIPT_DATA", "PRICE_INFO", "CHECK_PREPAID_ACCOUNT", "EVENT_SALES_PAGE", "EVENT_PRESALES_PAGE", "SET_CUSTOMER_NUMBER", "CUSTOMER_LOOKUP", "SHOW_CUSTOMER", "SHOW_RECEIPT_CUSTOMER", "REVISION", "PREPARATION_RECEIPT", "STOCK_RETURN", "PRINT_GIFT_RECEIPT", "SHOW_ITEM_INFO_TEXT_SELECTION", "SHOW_OPEN_STOCK_MANAGEMENT_RECEIPTS", "SAVE_STOCK_MANAGEMENT_RECEIPT", "PRODUCTTEXT_ALLERGENS", "PRODUCTTEXT_MANUAL", "PRODUCTTEXT_DESCRIPTION", "PRODUCTTEXT_INGREDIENTS", "PRODUCTTEXT_NUTRITIONAL_VALUE", "PRODUCTTEXT_CARE_INSTRUCTIONS", "PRODUCTTEXT_RECIPE", "PRODUCTTEXT_CERTIFICATE", "RESTART_POS", "SET_CUSTOMER_BY_NR", "CASHIER_PAUSE", "CASH_VOID", "CANCEL", "ZVT_ENDOFDAY", "ZVT_CLAIM", "ZVT_RELEASE", "CREDIT_AUTHORIZATION_TERMINAL_DIAGNOSIS", "CREDIT_AUTHORIZATION_TERMINAL_REPEAT_RECEIPT", "CREDIT_AUTHORIZATION_TERMINAL_INITIALZATION", "CREDIT_AUTHORIZATION_TERMINAL_CONFIGURATION", "CREATE_STORE_ORDERS", "LOAD_STORE_ORDERS", "CHANGE_BOOKING", "LIST_STOCKS_BY_PRODUCT", "FIND_BOOKING", "SET_RECEIPT_DISCOUNT_PERCENT", "SET_RECEIPT_DISCOUNT_SUBTRACTION", "BLOYAL_SNIPPET_FIND_CUSTOMER", "BLOYAL_SNIPPET_QUICK_SIGNUP", "BLOYAL_SNIPPET_APPLY_COUPON", "BLOYAL_SNIPPET_RECORD_VISIT", "BLOYAL_SNIPPET_VIEW_CUSTOMER", "BLOYAL_SNIPPET_CREATE_ORDER", "BLOYAL_SNIPPET_RETURN_ORDER", "BLOYAL_SNIPPET_CHECK_INVENTORY", "CLEAR_BUTTON_STATUS", "SWITCH_BUTTON_STATUS", "CROSS_SELLING", "TOGGLE_OSK", "LOAD_RECEIPT", "DEACTIVATE_OVERRIDE", "DENOMINATION_INPUT", "SWITCH_BLOYAL_STATE", "EXCHANGE_SALE", "RECEIPT_PRINT", "SHOW_RETURN_PAGE", "SHOW_RETURN_PAGE_WITH_CURRENT_RECEIPT", "CASH_CHECK", "ADVANCED_BOOKINGEDITING", "SHOW_PREAUTH_PAYMENTS", "SHOW_TAG_BUTTON_LAYOUT", "TARGET_PRICE_DISCOUNT", "APPLY_SPECIAL_OFFER", "SHOW_GODB_EXPORT", "SET_SERIAL", "CHANGE_ECONOMIC_ZONE", "CUSTOMER_ORDER_SEARCH", "CUSTOMER_ORDER_CREATE", "CUSTOMER_ORDER_EDIT", "ROUND_RECEIPT_TOTAL_DOWN", "SET_SALE_SELLER", "SWITCH_BATCH_PRINTING", "ACTIVATE_BATCH_PRINTING", "DEACTIVATE_BATCH_PRINTING", "DEACTIVATE_PRODUCER_PRINTING", "SET_PERCENTAGE_OF_RECEIPTTOTAL", "SHOW_PAYMENT_PAGE", "SET_COUPONING_CAMPAIGN_CARD", "EVENT_SALE", "EVENT_OVERVIEW_PRINT", "EVENT_OVERVIEW_SHOW", "CREATE_EVENT_RESOURCE", "KEY_UPPER_A", "KEY_UPPER_B", "KEY_UPPER_C", "KEY_UPPER_D", "KEY_UPPER_E", "KEY_UPPER_F", "KEY_UPPER_G", "KEY_UPPER_H", "KEY_UPPER_I", "KEY_UPPER_J", "KEY_UPPER_K", "KEY_UPPER_L", "KEY_UPPER_M", "KEY_UPPER_N", "KEY_UPPER_O", "KEY_UPPER_P", "KEY_UPPER_Q", "KEY_UPPER_R", "KEY_UPPER_S", "KEY_UPPER_T", "KEY_UPPER_U", "KEY_UPPER_V", "KEY_UPPER_W", "KEY_UPPER_X", "KEY_UPPER_Y", "KEY_UPPER_Z", "KEY_LOWER_A", "KEY_LOWER_B", "KEY_LOWER_C", "KEY_LOWER_D", "KEY_LOWER_E", "KEY_LOWER_F", "KEY_LOWER_G", "KEY_LOWER_H", "KEY_LOWER_I", "KEY_LOWER_J", "KEY_LOWER_K", "KEY_LOWER_L", "KEY_LOWER_M", "KEY_LOWER_N", "KEY_LOWER_O", "KEY_LOWER_P", "KEY_LOWER_Q", "KEY_LOWER_R", "KEY_LOWER_S", "KEY_LOWER_T", "KEY_LOWER_U", "KEY_LOWER_V", "KEY_LOWER_W", "KEY_LOWER_X", "KEY_LOWER_Y", "KEY_LOWER_Z", "RENTAL_SEARCH", "RENTAL_CREATE", "RENTAL_EDIT", "QUOTE_SEARCH", "QUOTE_CREATE", "QUOTE_EDIT", "DELIVERY_NOTE_SEARCH", "DELIVERY_NOTE_CREATE", "DELIVERY_NOTE_EDIT", "DEPOSIT_REFUNDMODE_SWITCH", "DEPOSIT_REFUNDMODE_ACTIVATE", "DEPOSIT_REFUNDMODE_DEACTIVATE", "RECORD_START_COMMAND_ID", "RECORT_END_COMMAND_ID", "ADD_SALEITEM_DISCOUNT", "ADD_CHANGE_CARRY_FORWARD", "ADD_AUTOMATIC_CHANGE_CARRY_FORWARD", "ADD_CHANGE_CARRY_FORWARD_DIFF", "ADD_AUTOMATIC_CHANGE_CARRY_FORWARD_DIFF", "CENTRAL_BALANCE", "CENTRAL_BALANCE_POS", "COMBINE_SALE_ITEMS", "ACTIVATE_COMBINE_SALE_ITEMS", "DEACTIVATE_COMBINE_SALE_ITEMS", "SWITCH_CONTAINER_MODE", "CONVERT_CONTAINER_TO_SINGLE_ITEM", "CONVERT_SINGLE_ITEM_TO_CONTAINER_BY_CAPACITY", "CONVERT_SINGLE_ITEM_TO_CONTAINER_BY_NUMBER", "EXTRACT_DEPOSIT_ITEMS", "REMOVE_SUB_PRODUCTS_FROM_CONTAINER", "ACTIVATE_MANDATORY_SIGNATURE_ON_RECEIPT", "DEACTIVATE_MANDATORY_SIGNATURE_ON_RECEIPT", "SWITCH_MANDATORY_SIGNATURE_ON_RECEIPT", "CREATE_VOUCHER", "REDEEM_VOUCHER", "CANCEL_VOUCHER", "SHOW_VOUCHER", "SET_RECEIPT_FINALIZATION_LOCK", "REMOVE_RECEIPT_FINALIZATION_LOCK", "TSE_SETUP_FORM", "SET_SALE_ITEM_SELECTION_MODE_SINGLE", "SET_SALE_ITEM_SELECTION_MODE_MULTI", "SET_DIGITAL_RECEIPT_EMAIL", "MACRO_CHANGE_ORG_ONCE_ON_RECEIPT", "MACRO_CHANGE_ORG_ON_RECEIPTS", "MACRO_CHANGE_PRICE_GROUP", "MACRO_REMOVE_ALL_COUPONS_FROM_RECEIPT", "UPLOAD_POS_JOURNAL", "CANCEL_SALE_IMMEDIATELY", "BARCODE_SCANNER_ACTIVATE", "BARCODE_SCANNER_DEACTIVATE", "BARCODE_SCANNER_SUCCESS_SIGNAL", "BARCODE_SCANNER_FAILURE_SIGNAL", "RETURN_ITEM", "RECEIPT_REVERSAL", "CHANGE_ECONOMIC_ZONE_FOR_ALL", "INVERT_INPUTLINE", "MACRO_CHANGE_PRICE_SHOW_NOTIFICATION", "SET_RECEIPT_PAYMENT_LOCK", "REMOVE_RECEIPT_PAYMENT_LOCK"])
      # validator.allowable_values.each do |value|
      #   expect { instance.macro = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "payment_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "button_layout"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "info_text"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "customer_group"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "account"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PRODUCT", "BUTTON_LAYOUT", "MACRO", "PAYMENT_METHOD", "CUSTOMER_GROUP", "ACCOUNT", "ITEM_SEQUENCE", "INFO_TEXT", "BUTTON_STATUS", "CHARACTER_STRING", "EXTERNAL_SYSTEM_CALL", "CHARACTER", "PRODUCT_TAG", "INTERNAL_SYSTEM_CALL"])
      # validator.allowable_values.each do |value|
      #   expect { instance.type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "tag"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "button_status"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NONE", "GREEN", "YELLOW", "RED", "HIDDEN"])
      # validator.allowable_values.each do |value|
      #   expect { instance.button_status = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "external_system_call"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "internal_system_call_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["MESSAGE", "STOCK", "CUSTOMER", "CASHIER", "DAY_RATING", "BONUS_POINTS", "RESOLVE_UNKNOWN_PRODUCTS", "EVENTS", "EVENTS_VALIDATION"])
      # validator.allowable_values.each do |value|
      #   expect { instance.internal_system_call_type = value }.not_to raise_error
      # end
    end
  end

end
