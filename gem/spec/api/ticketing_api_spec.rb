=begin
#KORONA.cloud API v3

#Our api provides access to our cloud services

The version of the OpenAPI document: 2.13.40
Contact: support@combase.net
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KoronaCloudClient::TicketingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TicketingApi' do
  before do
    # run before each test
    @api_instance = KoronaCloudClient::TicketingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TicketingApi' do
    it 'should create an instance of TicketingApi' do
      expect(@api_instance).to be_instance_of(KoronaCloudClient::TicketingApi)
    end
  end

  # unit tests for add_events
  # adds a batch of new events
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body an array of new events
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :upsert when set to true, updates the object instead of generating a already-exists-error
  # @return [Array<AddOrUpdateResult>]
  describe 'add_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_or_update_attendances
  # updates/adds attendances
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body an array of attendances
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'add_or_update_attendances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_ticket_definitions
  # adds a batch of new ticket definitions
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body array of new ticket definitions
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :upsert when set to true, updates the object instead of generating a already-exists-error
  # @return [Array<AddOrUpdateResult>]
  describe 'add_ticket_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_attendance
  # cancel the attendance
  # @param korona_account_id account id of the KORONA.cloud account
  # @param attendance_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'cancel_attendance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_event
  # deletes the single event
  # @param korona_account_id account id of the KORONA.cloud account
  # @param event_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ticket_definition
  # deletes the single ticket definition
  # @param korona_account_id account id of the KORONA.cloud account
  # @param ticket_definition_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ticket_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ticket_definitions
  # deletes a batch of ticket definitions
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body array of existing ticket definitions (id or number required)
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'delete_ticket_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_attendances
  # lists all attendances
  # @param korona_account_id account id of the KORONA.cloud account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @return [ResultListAttendance]
  describe 'get_attendances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entry_gate
  # returns the single entry gate
  # @param korona_account_id account id of the KORONA.cloud account
  # @param entry_gate_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [EntryGate]
  describe 'get_entry_gate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entry_gates
  # lists all entry gates
  # @param korona_account_id account id of the KORONA.cloud account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @option opts [String] :number number of the related object
  # @return [ResultListEntryGate]
  describe 'get_entry_gates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_event
  # returns the single event
  # @param korona_account_id account id of the KORONA.cloud account
  # @param event_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [Event]
  describe 'get_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events
  # lists all events
  # @param korona_account_id account id of the KORONA.cloud account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @return [ResultListEvent]
  describe 'get_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ticket_definition
  # returns the single ticket definition
  # @param korona_account_id account id of the KORONA.cloud account
  # @param ticket_definition_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [TicketDefinition]
  describe 'get_ticket_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ticket_definitions
  # lists all ticket definitions
  # @param korona_account_id account id of the KORONA.cloud account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @return [ResultListTicketDefinition]
  describe 'get_ticket_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tickets
  # lists all tickets
  # @param korona_account_id account id of the KORONA.cloud account
  # @param page number of the page to fetch
  # @param size amount of objects to return per page
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ticket_number ticket number
  # @option opts [String] :customer_number customer number
  # @option opts [DateTime] :creation_date_from creation date from
  # @option opts [DateTime] :creation_date_to creation date to
  # @option opts [Boolean] :locked is ticket locked
  # @option opts [String] :owner_last_name last name of owner
  # @option opts [String] :owner_first_name first name of owner
  # @option opts [Boolean] :load_owner_image set true if you want to load the owner&#39;s image
  # @return [ResultListTicket]
  describe 'get_tickets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for lock_ticket
  # locks the single ticket
  # @param korona_account_id account id of the KORONA.cloud account
  # @param ticket_number id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'lock_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unlock_ticket
  # unlocks the single ticket
  # @param korona_account_id account id of the KORONA.cloud account
  # @param ticket_number id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unlock_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_event
  # updates the single event
  # @param korona_account_id account id of the KORONA.cloud account
  # @param event_id id of the related object (important: id should match the uuid-format)
  # @param body the properties to update of the event
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_events
  # updates a batch of events
  # [number] must be set in the objects, otherwise the object cannot be updated
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body an array of existing events
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'update_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_ticket
  # updates the single ticket
  # @param korona_account_id account id of the KORONA.cloud account
  # @param ticket_number old ticket number
  # @param [Hash] opts the optional parameters
  # @option opts [String] :new_ticket_number new ticket number
  # @option opts [String] :first_name ticket owner&#39;s first name
  # @option opts [String] :last_name ticket owner&#39;s last name
  # @return [nil]
  describe 'update_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_ticket_definitions
  # updates a batch of ticket definitions
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body array of existing ticket definitions (id or number required)
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'update_ticket_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
