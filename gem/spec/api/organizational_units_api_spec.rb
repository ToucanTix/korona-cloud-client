=begin
#KORONA.cloud API v3

#Our api provides access to our cloud services

The version of the OpenAPI document: 2.19.20
Contact: support@combase.net
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for KoronaCloudClient::OrganizationalUnitsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganizationalUnitsApi' do
  before do
    # run before each test
    @api_instance = KoronaCloudClient::OrganizationalUnitsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganizationalUnitsApi' do
    it 'should create an instance of OrganizationalUnitsApi' do
      expect(@api_instance).to be_instance_of(KoronaCloudClient::OrganizationalUnitsApi)
    end
  end

  # unit tests for add_organizational_unit_day_ratings
  # adds a batch of new day ratings
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param body an array of new day ratings
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'add_organizational_unit_day_ratings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_organizational_units
  # adds a batch of new organizational units
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body an array of new organizational units
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :upsert when set to true, updates the object instead of generating a already-exists-error
  # @return [Array<AddOrUpdateResult>]
  describe 'add_organizational_units test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_organizational_unit
  # deletes the single organizational unit by its id
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_organizational_unit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_organizational_unit_day_rating
  # deletes the single day rating by its id or date
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param day_rating_id_or_date the id or date (YYYY-MM-DD) of the day rating
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_organizational_unit_day_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_organizational_units
  # deletes a batch of organizational units
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body array of existing organizational units (id or number required)
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'delete_organizational_units test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit
  # returns the single organizational unit
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @return [OrganizationalUnit]
  describe 'get_organizational_unit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit_day_rating
  # returns the single day rating by its id or date
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param day_rating_id_or_date the id or date (YYYY-MM-DD) of the day rating
  # @param [Hash] opts the optional parameters
  # @return [DayRating]
  describe 'get_organizational_unit_day_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit_day_ratings
  # lists all organizational unit related day ratings
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @return [ResultListDayRating]
  describe 'get_organizational_unit_day_ratings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit_inventory_lists
  # lists the inventory lists belonging to the organizational unit (KORONA.retail required)
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @option opts [Time] :min_create_time min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :max_create_time max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :min_booking_time min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :max_booking_time max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [String] :booking_status booking status (possible values: BOOKED, IN_PROGRESS)
  # @return [ResultListInventoryList]
  describe 'get_organizational_unit_inventory_lists test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit_product_stocks
  # lists the product stocks of the organizational unit, in case it contains a warehouse (KORONA.retail required)
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @return [ResultListProductStock]
  describe 'get_organizational_unit_product_stocks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_unit_stock_receipts
  # lists the stock receipts belonging to the organizational unit (KORONA.retail required)
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @option opts [Time] :min_create_time min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :max_create_time max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :min_booking_time min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [Time] :max_booking_time max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)
  # @option opts [String] :source_organizational_unit source organizational unit
  # @option opts [String] :booking_status booking status (possible values: BOOKED, IN_PROGRESS)
  # @option opts [String] :number number of the related object
  # @return [ResultListStockReceipt]
  describe 'get_organizational_unit_stock_receipts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organizational_units
  # lists all organizational units
  # @param korona_account_id account id of the KORONA.cloud account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page number of the page to fetch
  # @option opts [Integer] :size amount of objects to return per page
  # @option opts [String] :sort attribute to sort by (multiple separated by comma; max. 5)
  # @option opts [Integer] :revision last revision number, objects with a greater revision than this will be returned
  # @option opts [Boolean] :include_deleted indicates deleted objects should be loaded or not (default: false)
  # @option opts [String] :number number of the related object
  # @return [ResultListOrganizationalUnit]
  describe 'get_organizational_units test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organizational_unit
  # updates the organizational unit 
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param body the properties to update of the organizational unit
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_organizational_unit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organizational_unit_day_rating
  # updates the day rating by its id or date
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param day_rating_id_or_date the id or date (YYYY-MM-DD) of the day rating
  # @param body the properties to update of the day rating
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_organizational_unit_day_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organizational_unit_day_ratings
  # updates a batch of day ratings
  # @param korona_account_id account id of the KORONA.cloud account
  # @param organizational_unit_id id of the related object (important: id should match the uuid-format)
  # @param body an array of new day ratings
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'update_organizational_unit_day_ratings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organizational_units
  # updates a batch of organizational units
  # [number] must be set in the objects, otherwise the object cannot be updated
  # @param korona_account_id account id of the KORONA.cloud account
  # @param body an array of existing organizational units
  # @param [Hash] opts the optional parameters
  # @return [Array<AddOrUpdateResult>]
  describe 'update_organizational_units test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
